{"version":3,"sources":["webpack:///./d:/workspace/my-material-gatsby-site/src/templates/TemplateWrapper.js","webpack:///./d:/workspace/my-material-gatsby-site/src/pages/test/dynamicComponent.js"],"names":["TemplateWrapper","render","_this","this","react_default","a","createElement","gatsby_browser_entry","query","data","docItemTemplate","overridenTitle","props","_2494211273","React","Component","DynamicComponent","state","color","colors","templates_TemplateWrapper","className","style","type","onClick","setState","Math","floor","random","length","value"],"mappings":"gKAkDeA,4FA5CXC,OAAA,WAAS,IAAAC,EAAAC,KACL,OACIC,EAAAC,EAAAC,cAACC,EAAA,YAAD,CAAaC,MAAK,aAqChBP,OAAQ,SAAAQ,GAAI,OAAKL,EAAAC,EAAAC,cAACI,EAAA,QAAD,CAAUD,KAAMA,EAAME,eAAgBT,EAAKU,MAAMD,kBArCpEF,KAAAI,QAJkBC,IAAMC,qDCDfC,sJAEjBC,MAAM,CAACC,MAAO,WACdC,OAAO,CAAC,QAAS,MAAO,SAAU,OAAQ,OAAQ,SAAU,SAAU,QAAS,UAC/ElB,OAAS,kBAAOG,EAAAC,EAAAC,cAAA,WACVF,EAAAC,EAAAC,cAACc,EAAD,CAAiBT,eAAe,2BAChCP,EAAAC,EAAAC,cAAA,OAAKe,UAAU,WACbjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,oBACbjB,EAAAC,EAAAC,cAAA,MAAIgB,MAAO,CAACJ,MAAOhB,EAAKe,MAAMC,QAA9B,4BACAd,EAAAC,EAAAC,cAAA,SAAOiB,KAAK,SACZC,QAAS,kBAAMtB,EAAKuB,SAAS,CAACP,MAAOhB,EAAKiB,OAAOO,KAAKC,MAAMD,KAAKE,SAAW1B,EAAKiB,OAAOU,YACxFC,MAAM,+CAX0BhB,IAAMC","file":"component---src-pages-test-dynamic-component-js-98079957fd63eb919993.js","sourcesContent":["import React from \"react\"\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport Template from \"./docItemTemplate\";\r\n\r\nclass TemplateWrapper extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <StaticQuery query={graphql`query($path: String!) {\r\n                allMarkdownRemark(\r\n                  sort: { order: DESC, fields: [frontmatter___date] }\r\n                  limit: 1000\r\n                ) {\r\n                  edges {\r\n                    node {\r\n                      frontmatter {\r\n                        title\r\n                        path\r\n                        description\r\n                        keywords\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                markdownRemark(frontmatter: { path: { eq: $path } }) {\r\n                  html\r\n                  frontmatter {\r\n                    date(formatString: \"MMMM DD, YYYY\")\r\n                    path\r\n                    title\r\n                  }\r\n                }\r\n                localSearchPages {\r\n                  index\r\n                  store\r\n                }\r\n                allSitePage {\r\n                  edges {\r\n                    node {\r\n                      path\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              `}\r\n              render={data => (<Template data={data} overridenTitle={this.props.overridenTitle}/>)\r\n    }/>)\r\n}\r\n}\r\n\r\nexport default TemplateWrapper;\r\n\r\n\r\n","import React from \"react\"\r\nimport TemplateWrapper from '../../templates/TemplateWrapper'\r\n\r\nexport default class DynamicComponent extends React.Component {\r\n\r\n    state={color: 'black'}\r\n    colors=['black', 'red', 'yellow', 'blue', 'pink', 'purple', 'orange', 'green', 'grey']\r\n    render = () => (<div>\r\n          <TemplateWrapper overridenTitle=\"Dynamic component test\"/>\r\n          <div className=\"content\">\r\n            <div className=\"doc-item-content\">\r\n              <h1 style={{color: this.state.color}}>A very dynamic component</h1>\r\n              <input type=\"button\"\r\n              onClick={() => this.setState({color: this.colors[Math.floor(Math.random() * this.colors.length)]})}\r\n              value=\"Shuffle the color\"/>\r\n            </div>\r\n          </div>\r\n      </div>)\r\n\r\n\r\n}\r\n"],"sourceRoot":""}